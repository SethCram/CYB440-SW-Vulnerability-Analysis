
ctf_1:     file format elf64-x86-64


Disassembly of section .init:

0000000000400488 <_init>:
  400488:	48 83 ec 08          	sub    $0x8,%rsp
  40048c:	48 8b 05 65 0b 20 00 	mov    0x200b65(%rip),%rax        # 600ff8 <__gmon_start__>
  400493:	48 85 c0             	test   %rax,%rax
  400496:	74 05                	je     40049d <_init+0x15>
  400498:	e8 73 00 00 00       	call   400510 <__gmon_start__@plt>
  40049d:	48 83 c4 08          	add    $0x8,%rsp
  4004a1:	c3                   	ret    

Disassembly of section .plt:

00000000004004b0 <.plt>:
  4004b0:	ff 35 52 0b 20 00    	push   0x200b52(%rip)        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  4004b6:	ff 25 54 0b 20 00    	jmp    *0x200b54(%rip)        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  4004bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004004c0 <strncmp@plt>:
  4004c0:	ff 25 52 0b 20 00    	jmp    *0x200b52(%rip)        # 601018 <strncmp@GLIBC_2.2.5>
  4004c6:	68 00 00 00 00       	push   $0x0
  4004cb:	e9 e0 ff ff ff       	jmp    4004b0 <.plt>

00000000004004d0 <puts@plt>:
  4004d0:	ff 25 4a 0b 20 00    	jmp    *0x200b4a(%rip)        # 601020 <puts@GLIBC_2.2.5>
  4004d6:	68 01 00 00 00       	push   $0x1
  4004db:	e9 d0 ff ff ff       	jmp    4004b0 <.plt>

00000000004004e0 <system@plt>:
  4004e0:	ff 25 42 0b 20 00    	jmp    *0x200b42(%rip)        # 601028 <system@GLIBC_2.2.5>
  4004e6:	68 02 00 00 00       	push   $0x2
  4004eb:	e9 c0 ff ff ff       	jmp    4004b0 <.plt>

00000000004004f0 <read@plt>:
  4004f0:	ff 25 3a 0b 20 00    	jmp    *0x200b3a(%rip)        # 601030 <read@GLIBC_2.2.5>
  4004f6:	68 03 00 00 00       	push   $0x3
  4004fb:	e9 b0 ff ff ff       	jmp    4004b0 <.plt>

0000000000400500 <__libc_start_main@plt>:
  400500:	ff 25 32 0b 20 00    	jmp    *0x200b32(%rip)        # 601038 <__libc_start_main@GLIBC_2.2.5>
  400506:	68 04 00 00 00       	push   $0x4
  40050b:	e9 a0 ff ff ff       	jmp    4004b0 <.plt>

0000000000400510 <__gmon_start__@plt>:
  400510:	ff 25 2a 0b 20 00    	jmp    *0x200b2a(%rip)        # 601040 <__gmon_start__>
  400516:	68 05 00 00 00       	push   $0x5
  40051b:	e9 90 ff ff ff       	jmp    4004b0 <.plt>

Disassembly of section .text:

0000000000400520 <_start>:
  400520:	31 ed                	xor    %ebp,%ebp
  400522:	49 89 d1             	mov    %rdx,%r9
  400525:	5e                   	pop    %rsi
  400526:	48 89 e2             	mov    %rsp,%rdx
  400529:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  40052d:	50                   	push   %rax
  40052e:	54                   	push   %rsp
  40052f:	49 c7 c0 30 07 40 00 	mov    $0x400730,%r8
  400536:	48 c7 c1 c0 06 40 00 	mov    $0x4006c0,%rcx
  40053d:	48 c7 c7 84 06 40 00 	mov    $0x400684,%rdi
  400544:	e8 b7 ff ff ff       	call   400500 <__libc_start_main@plt>
  400549:	f4                   	hlt    
  40054a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400550 <deregister_tm_clones>:
  400550:	b8 57 10 60 00       	mov    $0x601057,%eax
  400555:	55                   	push   %rbp
  400556:	48 2d 50 10 60 00    	sub    $0x601050,%rax
  40055c:	48 83 f8 0e          	cmp    $0xe,%rax
  400560:	48 89 e5             	mov    %rsp,%rbp
  400563:	77 02                	ja     400567 <deregister_tm_clones+0x17>
  400565:	5d                   	pop    %rbp
  400566:	c3                   	ret    
  400567:	b8 00 00 00 00       	mov    $0x0,%eax
  40056c:	48 85 c0             	test   %rax,%rax
  40056f:	74 f4                	je     400565 <deregister_tm_clones+0x15>
  400571:	5d                   	pop    %rbp
  400572:	bf 50 10 60 00       	mov    $0x601050,%edi
  400577:	ff e0                	jmp    *%rax
  400579:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400580 <register_tm_clones>:
  400580:	b8 50 10 60 00       	mov    $0x601050,%eax
  400585:	55                   	push   %rbp
  400586:	48 2d 50 10 60 00    	sub    $0x601050,%rax
  40058c:	48 c1 f8 03          	sar    $0x3,%rax
  400590:	48 89 e5             	mov    %rsp,%rbp
  400593:	48 89 c2             	mov    %rax,%rdx
  400596:	48 c1 ea 3f          	shr    $0x3f,%rdx
  40059a:	48 01 d0             	add    %rdx,%rax
  40059d:	48 d1 f8             	sar    %rax
  4005a0:	75 02                	jne    4005a4 <register_tm_clones+0x24>
  4005a2:	5d                   	pop    %rbp
  4005a3:	c3                   	ret    
  4005a4:	ba 00 00 00 00       	mov    $0x0,%edx
  4005a9:	48 85 d2             	test   %rdx,%rdx
  4005ac:	74 f4                	je     4005a2 <register_tm_clones+0x22>
  4005ae:	5d                   	pop    %rbp
  4005af:	48 89 c6             	mov    %rax,%rsi
  4005b2:	bf 50 10 60 00       	mov    $0x601050,%edi
  4005b7:	ff e2                	jmp    *%rdx
  4005b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004005c0 <__do_global_dtors_aux>:
  4005c0:	80 3d 85 0a 20 00 00 	cmpb   $0x0,0x200a85(%rip)        # 60104c <completed.6355>
  4005c7:	75 11                	jne    4005da <__do_global_dtors_aux+0x1a>
  4005c9:	55                   	push   %rbp
  4005ca:	48 89 e5             	mov    %rsp,%rbp
  4005cd:	e8 7e ff ff ff       	call   400550 <deregister_tm_clones>
  4005d2:	5d                   	pop    %rbp
  4005d3:	c6 05 72 0a 20 00 01 	movb   $0x1,0x200a72(%rip)        # 60104c <completed.6355>
  4005da:	f3 c3                	repz ret 
  4005dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004005e0 <frame_dummy>:
  4005e0:	48 83 3d 38 08 20 00 	cmpq   $0x0,0x200838(%rip)        # 600e20 <__JCR_END__>
  4005e7:	00 
  4005e8:	74 1e                	je     400608 <frame_dummy+0x28>
  4005ea:	b8 00 00 00 00       	mov    $0x0,%eax
  4005ef:	48 85 c0             	test   %rax,%rax
  4005f2:	74 14                	je     400608 <frame_dummy+0x28>
  4005f4:	55                   	push   %rbp
  4005f5:	bf 20 0e 60 00       	mov    $0x600e20,%edi
  4005fa:	48 89 e5             	mov    %rsp,%rbp
  4005fd:	ff d0                	call   *%rax
  4005ff:	5d                   	pop    %rbp
  400600:	e9 7b ff ff ff       	jmp    400580 <register_tm_clones>
  400605:	0f 1f 00             	nopl   (%rax)
  400608:	e9 73 ff ff ff       	jmp    400580 <register_tm_clones>

000000000040060d <winner>:
  40060d:	55                   	push   %rbp
  40060e:	48 89 e5             	mov    %rsp,%rbp
  400611:	bf 50 07 40 00       	mov    $0x400750,%edi
  400616:	e8 b5 fe ff ff       	call   4004d0 <puts@plt>
  40061b:	5d                   	pop    %rbp
  40061c:	c3                   	ret    

000000000040061d <pass2>:
  40061d:	55                   	push   %rbp
  40061e:	48 89 e5             	mov    %rsp,%rbp
  400621:	48 83 ec 20          	sub    $0x20,%rsp
  400625:	48 89 7d e8          	mov    %rdi,-0x18(%rbp) # store user input in new variable 
  400629:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40062d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  400631:	48 83 45 f8 0a       	addq   $0xa,-0x8(%rbp) # add 10 to var
  400636:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40063a:	48 89 c7             	mov    %rax,%rdi
  40063d:	e8 9e fe ff ff       	call   4004e0 <system@plt>
  400642:	c9                   	leave  
  400643:	c3                   	ret    

0000000000400644 <pass1>:
  400644:	55                   	push   %rbp
  400645:	48 89 e5             	mov    %rsp,%rbp
  400648:	48 83 ec 10          	sub    $0x10,%rsp
  40064c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp) #new var w/ 8 bytes containing user input
  400650:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400654:	ba 0a 00 00 00       	mov    $0xa,%edx
  400659:	be 60 07 40 00       	mov    $0x400760,%esi
  40065e:	48 89 c7             	mov    %rax,%rdi
  400661:	e8 5a fe ff ff       	call   4004c0 <strncmp@plt>
  400666:	85 c0                	test   %eax,%eax #bitwise AND, which should always be true (NOP)
  400668:	75 0e                	jne    400678 <pass1+0x34>
  40066a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax #need to get in here
  40066e:	48 89 c7             	mov    %rax,%rdi
  400671:	e8 a7 ff ff ff       	call   40061d <pass2>
  400676:	eb 0a                	jmp    400682 <pass1+0x3e>
  400678:	bf 6b 07 40 00       	mov    $0x40076b,%edi
  40067d:	e8 4e fe ff ff       	call   4004d0 <puts@plt> #will likely display contents of file or failure msg
  400682:	c9                   	leave  
  400683:	c3                   	ret    

0000000000400684 <main>:
  400684:	55                   	push   %rbp
  400685:	48 89 e5             	mov    %rsp,%rbp
  400688:	48 83 ec 40          	sub    $0x40,%rsp
  40068c:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
  400690:	ba 40 00 00 00       	mov    $0x40,%edx
  400695:	48 89 c6             	mov    %rax,%rsi
  400698:	bf 00 00 00 00       	mov    $0x0,%edi
  40069d:	e8 4e fe ff ff       	call   4004f0 <read@plt>
  4006a2:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
  4006a6:	48 89 c7             	mov    %rax,%rdi
  4006a9:	e8 96 ff ff ff       	call   400644 <pass1> #unconditional call likely using what's passed in during read()
  4006ae:	b8 00 00 00 00       	mov    $0x0,%eax
  4006b3:	c9                   	leave  
  4006b4:	c3                   	ret    
  4006b5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
  4006bc:	00 00 00 
  4006bf:	90                   	nop

00000000004006c0 <__libc_csu_init>:
  4006c0:	41 57                	push   %r15
  4006c2:	41 89 ff             	mov    %edi,%r15d
  4006c5:	41 56                	push   %r14
  4006c7:	49 89 f6             	mov    %rsi,%r14
  4006ca:	41 55                	push   %r13
  4006cc:	49 89 d5             	mov    %rdx,%r13
  4006cf:	41 54                	push   %r12
  4006d1:	4c 8d 25 38 07 20 00 	lea    0x200738(%rip),%r12        # 600e10 <__frame_dummy_init_array_entry>
  4006d8:	55                   	push   %rbp
  4006d9:	48 8d 2d 38 07 20 00 	lea    0x200738(%rip),%rbp        # 600e18 <__do_global_dtors_aux_fini_array_entry>
  4006e0:	53                   	push   %rbx
  4006e1:	4c 29 e5             	sub    %r12,%rbp
  4006e4:	31 db                	xor    %ebx,%ebx
  4006e6:	48 c1 fd 03          	sar    $0x3,%rbp
  4006ea:	48 83 ec 08          	sub    $0x8,%rsp
  4006ee:	e8 95 fd ff ff       	call   400488 <_init>
  4006f3:	48 85 ed             	test   %rbp,%rbp
  4006f6:	74 1e                	je     400716 <__libc_csu_init+0x56>
  4006f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4006ff:	00 
  400700:	4c 89 ea             	mov    %r13,%rdx
  400703:	4c 89 f6             	mov    %r14,%rsi
  400706:	44 89 ff             	mov    %r15d,%edi
  400709:	41 ff 14 dc          	call   *(%r12,%rbx,8)
  40070d:	48 83 c3 01          	add    $0x1,%rbx
  400711:	48 39 eb             	cmp    %rbp,%rbx
  400714:	75 ea                	jne    400700 <__libc_csu_init+0x40>
  400716:	48 83 c4 08          	add    $0x8,%rsp
  40071a:	5b                   	pop    %rbx
  40071b:	5d                   	pop    %rbp
  40071c:	41 5c                	pop    %r12
  40071e:	41 5d                	pop    %r13
  400720:	41 5e                	pop    %r14
  400722:	41 5f                	pop    %r15
  400724:	c3                   	ret    
  400725:	90                   	nop
  400726:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
  40072d:	00 00 00 

0000000000400730 <__libc_csu_fini>:
  400730:	f3 c3                	repz ret 

Disassembly of section .fini:

0000000000400734 <_fini>:
  400734:	48 83 ec 08          	sub    $0x8,%rsp
  400738:	48 83 c4 08          	add    $0x8,%rsp
  40073c:	c3                   	ret    
